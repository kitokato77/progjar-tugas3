FILE SERVER TUJUAN: melayani client dalam request file server

ATURAN PROTOKOL:

client harus mengirimkan request dalam bentuk string
string harus dalam format REQUEST spasi PARAMETER
PARAMETER dapat berkembang menjadi PARAMETER1 spasi PARAMETER2 dan seterusnya

REQUEST YANG DILAYANI:

informasi umum:
    Jika request tidak dikenali akan menghasilkan pesan
        status: ERROR
        data: request tidak dikenali
    Semua result akan diberikan dalam bentuk JSON dan diakhiri dengan character ascii code #13#10#13#10 atau "\r\n\r\n"

LIST

TUJUAN: untuk mendapatkan daftar seluruh file yang dilayani oleh file server
PARAMETER: tidak ada
RESULT:

BERHASIL:
    status: OK
    data: list file
GAGAL:
    status: ERROR
    data: pesan kesalahan

GET

TUJUAN: untuk mendapatkan isi file dengan menyebutkan nama file dalam parameter
PARAMETER:
    PARAMETER1 : nama file
RESULT:

BERHASIL:
    status: OK
    data_namafile : nama file yang diminta
    data_file : isi file yang diminta (dalam bentuk base64)
GAGAL:
    status: ERROR
    data: pesan kesalahan

UPLOAD

TUJUAN: untuk mengunggah file ke server
PARAMETER:
    PARAMETER1 : nama file yang akan disimpan di server
    PARAMETER2 : isi file dalam format base64
RESULT:

BERHASIL:
    status: OK
    data_namafile : nama file yang diunggah
GAGAL:
    status: ERROR
    data: pesan kesalahan

DELETE

TUJUAN: untuk menghapus file dari server
PARAMETER:
    PARAMETER1 : nama file yang akan dihapus
RESULT:

BERHASIL:
    status: OK
    data: pesan konfirmasi penghapusan
GAGAL:
    status: ERROR
    data: pesan kesalahan

File server ini dirancang untuk melayani permintaan dari client menggunakan protokol berbasis string dengan format "REQUEST PARAMETER", yang memungkinkan ekspansi parameter secara fleksibel. Semua komunikasi antar client dan server menggunakan format JSON sebagai respons, dan setiap respons diakhiri dengan karakter khusus `\r\n\r\n` agar mudah diidentifikasi sebagai akhir pesan. Server mengenali empat jenis perintah utama: `LIST` untuk menampilkan daftar file yang tersedia, `GET` untuk mengambil isi file tertentu dalam format base64, `UPLOAD` untuk mengunggah file ke server juga dalam format base64, dan `DELETE` untuk menghapus file yang sudah ada. Jika permintaan client tidak sesuai format atau tidak dikenali, server akan mengembalikan status `ERROR` dengan pesan kesalahan yang sesuai. Protokol ini memudahkan integrasi karena berbasis teks, fleksibel dalam ekspansi parameter, dan mendukung pertukaran data file secara efisien melalui encoding base64.
